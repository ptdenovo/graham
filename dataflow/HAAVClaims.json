{
	"name": "HAAVClaims",
	"properties": {
		"folder": {
			"name": "Transform"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsQuery",
						"type": "DatasetReference"
					},
					"name": "Carrier"
				},
				{
					"dataset": {
						"referenceName": "dsQuery",
						"type": "DatasetReference"
					},
					"name": "ClaimTransaction"
				},
				{
					"dataset": {
						"referenceName": "dsgrahamStageDB",
						"type": "DatasetReference"
					},
					"name": "stageHAAV"
				},
				{
					"dataset": {
						"referenceName": "dsgrahamDB",
						"type": "DatasetReference"
					},
					"name": "ClaimCorrectionMap"
				},
				{
					"dataset": {
						"referenceName": "dsgrahamDB",
						"type": "DatasetReference"
					},
					"name": "FieldValueMapCombined"
				},
				{
					"dataset": {
						"referenceName": "dsQuery",
						"type": "DatasetReference"
					},
					"name": "DimClientCarrierGroup"
				},
				{
					"dataset": {
						"referenceName": "dsQuery",
						"type": "DatasetReference"
					},
					"name": "DimClient"
				},
				{
					"dataset": {
						"referenceName": "dsQuery",
						"type": "DatasetReference"
					},
					"name": "ClaimExist"
				},
				{
					"dataset": {
						"referenceName": "dsgrahamDB",
						"type": "DatasetReference"
					},
					"name": "CCM"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dsDimClaim",
						"type": "DatasetReference"
					},
					"name": "Claim"
				},
				{
					"dataset": {
						"referenceName": "dsClaimsTransaction",
						"type": "DatasetReference"
					},
					"name": "stageClaimTransaction"
				},
				{
					"name": "cacheFVMClaimType"
				},
				{
					"name": "cacheClient"
				},
				{
					"name": "cacheCCMBodyPart1"
				},
				{
					"name": "cacheCCMPolicyPeriodDefault"
				},
				{
					"name": "cacheCCMClientPolicyPeriod"
				},
				{
					"name": "cacheCCMClientClaimType"
				},
				{
					"name": "cacheCCMClaimType"
				},
				{
					"name": "cacheCCMInjuryType"
				},
				{
					"name": "cacheCCMCauseType"
				},
				{
					"name": "cacheCCMGender"
				},
				{
					"name": "cacheCCMMaritalStatus"
				},
				{
					"name": "cacheCCMClaimOccupation"
				},
				{
					"name": "cacheCCMOccupation"
				}
			],
			"transformations": [
				{
					"name": "JoinCarrier"
				},
				{
					"name": "FilterClaimant"
				},
				{
					"name": "SelectAlternateClaimant"
				},
				{
					"name": "JoinstageClaimant"
				},
				{
					"name": "DerivedClaimant"
				},
				{
					"name": "SelectAfterClaimantMapping"
				},
				{
					"name": "JoinStageHAAV"
				},
				{
					"name": "DeriveClaimColumns"
				},
				{
					"name": "SelectAfterDerivedClaimCols"
				},
				{
					"name": "DerivedClientPolicyPeriod"
				},
				{
					"name": "DerivedDefaultPeriod"
				},
				{
					"name": "DerivedYearAdjustment"
				},
				{
					"name": "DerivedPolicyDates"
				},
				{
					"name": "SelectAfterPolicyPeriod"
				},
				{
					"name": "ChimesPolicyPeriodCorrection"
				},
				{
					"name": "DerivedFVClaimType"
				},
				{
					"name": "DerivedCCMClaimType"
				},
				{
					"name": "FilterCCMDOH"
				},
				{
					"name": "FilterCCMClaimantChimes"
				},
				{
					"name": "FilterCCMBenefitState"
				},
				{
					"name": "DerivedClaimTypeChimesNewClaimNo"
				},
				{
					"name": "JoinNewClaimNoDOH"
				},
				{
					"name": "DerivedNewClaimNoDOH"
				},
				{
					"name": "SelectAfterNewClaimNoDOH"
				},
				{
					"name": "JoinNewClaimNoClaimant"
				},
				{
					"name": "DerivedNewClaimNoClaimant"
				},
				{
					"name": "SelectAfterNewClaimantMap"
				},
				{
					"name": "JoinCCDmBenefitState"
				},
				{
					"name": "DerivedColsBasedOnChimes"
				},
				{
					"name": "SelectAfterBenefitState"
				},
				{
					"name": "FilterCCMClaimNumber"
				},
				{
					"name": "JoinCCMClaimNo"
				},
				{
					"name": "CorrectingClaimNo"
				},
				{
					"name": "FilterCCMDOHNonChimes"
				},
				{
					"name": "FilterCCMClaimant"
				},
				{
					"name": "JoinCCMDOH"
				},
				{
					"name": "DerivedDOHNonChimes"
				},
				{
					"name": "SelectAfterCalimNoCorrection"
				},
				{
					"name": "SelectAfterDOHNonChimes"
				},
				{
					"name": "JoinClaimantNonChimes"
				},
				{
					"name": "DerivedClaimantFinal"
				},
				{
					"name": "SelectAfterClaimantFinal"
				},
				{
					"name": "JoinClientCarrierGroup"
				},
				{
					"name": "DerivedColumns"
				},
				{
					"name": "SelectFinalCols"
				},
				{
					"name": "SelectAfterClientCarrierGroupJoin"
				},
				{
					"name": "AlterRowClim"
				},
				{
					"name": "FilterInvalidRecords"
				},
				{
					"name": "AggregateRows"
				},
				{
					"name": "SelectStageColumns"
				},
				{
					"name": "AlterStageRow"
				},
				{
					"name": "AggregateStageRows"
				},
				{
					"name": "JoinExistingClaim"
				},
				{
					"name": "SelectAfterCheckingClaim"
				},
				{
					"name": "FilterFVClaimType"
				},
				{
					"name": "DerivedFVMClaimTypeKey"
				},
				{
					"name": "SetClaimTypeMapKey"
				},
				{
					"name": "SelectFinalStageCols"
				},
				{
					"name": "DerivedCCMColumns"
				},
				{
					"name": "DerivedOccupationFromClientCode"
				},
				{
					"name": "FilterCCMBodyPart"
				},
				{
					"name": "SetBodyPartMapKey"
				},
				{
					"name": "FilterPolicyPeriodDefault"
				},
				{
					"name": "FilterClientPolicyPeriod"
				},
				{
					"name": "SetClientLOBMapKey"
				},
				{
					"name": "DerivedClientLOBPPMapKey"
				},
				{
					"name": "CCmClientClaimType"
				},
				{
					"name": "CCMClaimNoClaimType"
				},
				{
					"name": "CCMInjuryType"
				},
				{
					"name": "CCMCauseType"
				},
				{
					"name": "CCMGender"
				},
				{
					"name": "CCMMaritalStatus"
				},
				{
					"name": "CCMClaimOccupation"
				},
				{
					"name": "CCMOccupation"
				}
			],
			"script": "parameters{\n\tCarrierCode as string ('HAAV')\n}\nsource(output(\n\t\tCarrierKey as short,\n\t\tCarrierCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tquery: (concat('SELECT CarrierKey, CarrierCode From DimCarrier WHERE CarrierCode=', '\\'',$CarrierCode,'\\' AND Enabled=1')),\n\tformat: 'query',\n\tstaged: false) ~> Carrier\nsource(output(\n\t\tClaimTransactionKey as long,\n\t\tCarrierCode as string,\n\t\tClientCode as string,\n\t\tValuationDate as date,\n\t\t{Policy Year} as integer,\n\t\t{Policy Effective Date} as date,\n\t\t{Policy Expiration Date} as date,\n\t\t{Policy Number} as string,\n\t\tAccident_Description as string,\n\t\tClaimant as string,\n\t\tClaimNumber as string,\n\t\t{Date of Loss} as date,\n\t\t{Lag Time} as string,\n\t\t{Date Reported} as date,\n\t\t{Day of Week} as string,\n\t\t{Closed Date} as date,\n\t\tDaysToClose as integer,\n\t\tClaimStatus as string,\n\t\tGender as string,\n\t\tMaritalStatus as string,\n\t\t{Date of Hire} as string,\n\t\tDriver as string,\n\t\tOccupation as string,\n\t\tLOBCode as string,\n\t\tClaimTypeCode as string,\n\t\tInjuryType as string,\n\t\tBodyPart as string,\n\t\tCauseType as string,\n\t\tNAICS_Code as string,\n\t\tLitigation as string,\n\t\tOccurrance_State as string,\n\t\tBenefit_State as string,\n\t\tInsured_Identifier as string,\n\t\tRowID as long,\n\t\tAge as string,\n\t\tClientCarrierGroupKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: (concat('SELECT [ClaimTransactionKey] ,[CarrierCode] ,[ClientCode] ,[ValuationDate] ,[Policy Year] ,[Policy Effective Date] ,[Policy Expiration Date] ,[Policy Number] ,[Accident_Description] ,[Claimant] ,[ClaimNumber] ,[Date of Loss] ,[Lag Time] ,[Date Reported] ,[Day of Week] ,[Closed Date] ,[DaysToClose] ,[ClaimStatus] ,[Gender] ,[MaritalStatus] ,[Date of Hire] ,[Driver] ,[Occupation] ,[LOBCode] ,[ClaimTypeCode] ,[InjuryType] ,[BodyPart] ,[CauseType] ,[NAICS_Code] ,[Litigation] ,[Occurrance_State] ,[Benefit_State] ,[Insured_Identifier] ,[RowID] ,[Age] ,[ClientCarrierGroupKey] From stage.ClaimTransaction WHERE CarrierCode=', '\\'',$CarrierCode,'\\'')),\n\tformat: 'query',\n\tstaged: false,\n\tpartitionColumn: 'ClaimTransactionKey',\n\tpartitionBy('external', 4)) ~> ClaimTransaction\nsource(output(\n\t\tRowID as long,\n\t\tClientCode as string,\n\t\t{Claim Number} as string,\n\t\tValuationDate as date,\n\t\tFileClaimType as string,\n\t\tFileLOB as string,\n\t\t{Accident Date (Sort as YYYYMMDD)} as string,\n\t\t{Accident Date} as string,\n\t\t{Claimant/Insured Driver Name} as string,\n\t\t{HOL 2 -Prime Contractor (Current)} as string,\n\t\t{File Insured Name} as string,\n\t\t{File Policy Number} as string,\n\t\t{File Policy Period} as string,\n\t\t{Accident Time} as string,\n\t\t{Litigation Status} as string,\n\t\t{Claimant Occupation} as string,\n\t\t{Hartford Claim Number} as string,\n\t\t{Catastrophe Code} as string,\n\t\t{Driver Name - Insured} as string,\n\t\tClaimID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tquery: ('SELECT RowID,ClientCode,[Claim Number],ValuationDate,[Claim Type] AS FileClaimType,[Line of Business] as FileLOB, [Accident Date (Sort as YYYYMMDD)],[Accident Date],[Claimant/Insured Driver Name],[HOL 2 -Prime Contractor (Current)],[Insured Name] As [File Insured Name],[Policy Number] AS [File Policy Number],[Policy Period] AS [File Policy Period],[Accident Time],[Litigation Status],[Claimant Occupation],[CT12 - Loss Analysis Claim Number (Current)] As [Hartford Claim Number],[Catastrophe Code],[Driver Name - Insured],[CT11 - SISCO/HIG Claim Number (Current)] As ClaimID FROM stage.[HAAV]'),\n\tformat: 'query') ~> stageHAAV\nsource(output(\n\t\tCarrierCode as string,\n\t\tFieldName as string,\n\t\tFieldValue1 as string,\n\t\tFieldValue2 as string,\n\t\tFieldValue3 as string,\n\t\tFieldValue4 as string,\n\t\tFieldValue5 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tquery: (concat('SELECT CarrierCode,FieldName,FieldValue1 AS FieldValue1,FieldValue2,FieldValue3,FieldValue4,FieldValue5 FROM ClaimCorrectionMap WHERE CarrierCode=', '\\'',$CarrierCode,'\\'')),\n\tformat: 'query') ~> ClaimCorrectionMap\nsource(output(\n\t\tFieldName as string,\n\t\tFieldValue1 as string,\n\t\tFieldValue2 as string,\n\t\tFieldValue3 as string,\n\t\tFieldValue4 as string,\n\t\tFieldValue5 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tquery: (concat('SELECT FieldName,FieldValue1 AS FieldValue1,FieldValue2,FieldValue3,FieldValue4,FieldValue5 FROM FieldValueCombinedMap WHERE CarrierCode=', '\\'',$CarrierCode,'\\'')),\n\tformat: 'query') ~> FieldValueMapCombined\nsource(output(\n\t\tClientCarrierGroupKey as integer,\n\t\tClientKey as short,\n\t\tClientCode as string,\n\t\tLOBCode as string,\n\t\tLineOfBusinessKey as short,\n\t\tPolicyEffectiveDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tquery: (concat('SELECT ClientCarrierGroupKey,ClientKey,ClientCode,LOBCode,LineOfBusinessKey,PolicyEffectiveDate FROM DimClientCarrierGroup WHERE CarrierCode=',\"'\", $CarrierCode,\"'\")),\n\tformat: 'query',\n\tstaged: false) ~> DimClientCarrierGroup\nsource(output(\n\t\tClientKey as short,\n\t\tClientCode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tquery: 'SELECT ClientKey,ClientCode FROM [dbo].[DimClient] WHERE Enabled=1',\n\tformat: 'query',\n\tstaged: false) ~> DimClient\nsource(output(\n\t\tClaimKey as long,\n\t\tClaimNumber as string,\n\t\tClaimant as string,\n\t\tClientCarrierGroupKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tquery: 'SELECT ClaimKey,ClaimNumber,Claimant, ClientCarrierGroupKey \\nFROM DimClaim dc\\nINNER JOIN DimCarrier c ON dc.CarrierKey=c.CarrierKey\\nWHERE c.CarrierCode=\\'HAAV\\'',\n\tformat: 'query',\n\tstaged: false) ~> ClaimExist\nsource(output(\n\t\tCarrierCode as string,\n\t\tFieldName as string,\n\t\tFieldValue1 as string,\n\t\tFieldValue2 as string,\n\t\tFieldValue3 as string,\n\t\tFieldValue4 as string,\n\t\tFieldValue5 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tquery: (concat('SELECT CarrierCode,FieldName,FieldValue1 AS FieldValue1,FieldValue2,FieldValue3,FieldValue4,FieldValue5 FROM ClaimCorrectionMap WHERE CarrierCode=', '\\'',$CarrierCode,'\\'')),\n\tformat: 'query') ~> CCM\nClaimTransaction, Carrier join(ClaimTransaction@CarrierCode == Carrier@CarrierCode,\n\tjoinType:'inner',\n\tbroadcast: 'right')~> JoinCarrier\nstageHAAV filter(!isNull({Claimant/Insured Driver Name})) ~> FilterClaimant\nFilterClaimant select(mapColumn(\n\t\tRowID,\n\t\tClientCode,\n\t\t{Claim Number},\n\t\tValuationDate,\n\t\t{Claimant/Insured Driver Name}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAlternateClaimant\nJoinCarrier, SelectAlternateClaimant join(ClaimTransaction@ClientCode == SelectAlternateClaimant@ClientCode\n\t&& ClaimNumber == {Claim Number}\n\t&& ClaimTransaction@ValuationDate == SelectAlternateClaimant@ValuationDate,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinstageClaimant\nJoinstageClaimant derive(DerivedClaimant = {Claimant/Insured Driver Name}) ~> DerivedClaimant\nDerivedClaimant select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode = ClaimTransaction@CarrierCode,\n\t\tClientCode = ClaimTransaction@ClientCode,\n\t\tValuationDate = ClaimTransaction@ValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tRowID = ClaimTransaction@RowID,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterClaimantMapping\nSelectAfterClaimantMapping, stageHAAV join(SelectAfterClaimantMapping@RowID == stageHAAV@RowID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinStageHAAV\nJoinStageHAAV derive({Date of Loss} = iif(isNull({Accident Date (Sort as YYYYMMDD)}),{Accident Date},{Accident Date (Sort as YYYYMMDD)}),\n\t\tDriver = iif(!isNull({Driver Name - Insured}), {Driver Name - Insured}, Driver),\n\t\t{Day of Week} = iif({Date of Loss}!=toDate('1900-01-01', 'yyyy-mm-DD'),\r\niif(dayOfWeek({Date of Loss})== 2d, 'Monday',\r\niif(dayOfWeek({Date of Loss})== 3d, 'Tuesday',\r\niif(dayOfWeek({Date of Loss})== 4d, 'Wednesday',\r\niif(dayOfWeek({Date of Loss})== 5d, 'Thursday',\r\niif(dayOfWeek({Date of Loss})== 6d, 'Friday',\r\niif(dayOfWeek({Date of Loss})== 7d, 'Saturday',\r\niif(dayOfWeek({Date of Loss})== 1d, 'Sunday',\r\n'')\r\n)))))),''),\n\t\tClaimant = iif(!isNull({Claimant/Insured Driver Name}),{Claimant/Insured Driver Name},Claimant),\n\t\tLitigation = iif(isNull(Litigation), 0, \r\niif(lower(Litigation)=='opened' || lower(Litigation)=='closed', 1, \r\n0)),\n\t\tClaimID = coalesce(ClaimID,'00')) ~> DeriveClaimColumns\nDeriveClaimColumns select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode,\n\t\tClientCode = SelectAfterClaimantMapping@ClientCode,\n\t\tValuationDate = SelectAfterClaimantMapping@ValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tRowID = SelectAfterClaimantMapping@RowID,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\t{Claim Number},\n\t\t{HOL 2 -Prime Contractor (Current)},\n\t\t{File Insured Name},\n\t\t{File Policy Number},\n\t\t{File Policy Period},\n\t\t{Accident Time},\n\t\t{Litigation Status},\n\t\t{Claimant Occupation},\n\t\t{Hartford Claim Number},\n\t\t{Catastrophe Code},\n\t\tFileClaimType,\n\t\tFileLOB,\n\t\tClaimID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterDerivedClaimCols\nDerivedDefaultPeriod derive(PolicyMonth = coalesce(toInteger(cacheCCMClientPolicyPeriod#lookup(ClientLOBMapKey).PPMonth),DefaultPolicyMonth),\n\t\tPolicyDay = coalesce(toInteger(cacheCCMClientPolicyPeriod#lookup(ClientLOBMapKey).PPDay),DefaultPolicyDay)) ~> DerivedClientPolicyPeriod\nDerivedClientLOBPPMapKey derive(DefaultPolicyMonth = coalesce(toInteger(cacheCCMPolicyPeriodDefault#lookup(ClientCode).PPDefaultMonth),1),\n\t\tDefaultPolicyDay = coalesce(toInteger(cacheCCMPolicyPeriodDefault#lookup(ClientCode).PPDefaultDay),1),\n\t\t{Date of Loss} = toDate({Date of Loss})) ~> DerivedDefaultPeriod\nDerivedClientPolicyPeriod derive(YearAdjustment = iif(!isNull(PolicyMonth) && PolicyMonth!=0,iif((month({Date of Loss})*100 + dayOfMonth({Date of Loss}))<(PolicyMonth*100 + PolicyDay),-1,0),0),\n\t\tLossYear = year({Date of Loss})) ~> DerivedYearAdjustment\nDerivedYearAdjustment derive({Policy Effective Date} = iif(PolicyDay>0,toDate(concat(toString((LossYear+YearAdjustment)),'-',toString(PolicyMonth),'-',toString(PolicyDay))),{Policy Effective Date}),\n\t\t{Policy Expiration Date} = iif(PolicyDay>0,toDate(concat(toString((LossYear+1+YearAdjustment)),'-',toString(PolicyMonth),'-',toString(PolicyDay))),{Policy Expiration Date})) ~> DerivedPolicyDates\nDerivedPolicyDates select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode,\n\t\tClientCode,\n\t\tValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tRowID,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\t{Claim Number},\n\t\t{HOL 2 -Prime Contractor (Current)},\n\t\t{File Insured Name},\n\t\t{File Policy Number},\n\t\t{File Policy Period},\n\t\t{Accident Time},\n\t\t{Litigation Status},\n\t\t{Claimant Occupation},\n\t\t{Hartford Claim Number},\n\t\t{Catastrophe Code},\n\t\tFileClaimType,\n\t\tFileLOB,\n\t\tClaimID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterPolicyPeriod\nSelectAfterPolicyPeriod derive({Policy Effective Date} = iif(ClientCode=='CHIMES-01' && split({File Policy Period}, '-')[2]=='06/01/2021',\r\ntoDate(concat(toString(year({Policy Effective Date})-1),\"-\",toString(month({Policy Effective Date})),\"-\",toString(dayOfMonth({Policy Effective Date}))),'yyyy-mm-DD'),\r\n{Policy Effective Date}),\n\t\t{Policy Expiration Date} = iif(ClientCode=='CHIMES-01' && split({File Policy Period}, '-')[2]=='06/01/2021',\r\ntoDate(split({File Policy Period}, '-')[2],'yyyy-mm-DD'),\r\n{Policy Expiration Date} )) ~> ChimesPolicyPeriodCorrection\nSetClaimTypeMapKey derive(ClaimTypeCode = coalesce(cacheFVMClaimType#lookup(ClaimTypeMapKey).FieldValue4,ClaimTypeCode)) ~> DerivedFVClaimType\nDerivedFVClaimType derive(ClaimTypeCode = coalesce(cacheCCMClientClaimType#lookup(ClientCode,ClaimNumber).FieldValue3,ClaimTypeCode),\n\t\tClaimNumber = iif(!isNull({Hartford Claim Number})&& trim({Hartford Claim Number})!='', {Hartford Claim Number}, ClaimNumber)) ~> DerivedCCMClaimType\nClaimCorrectionMap filter(FieldName=='Date of Hire-Chimes') ~> FilterCCMDOH\nClaimCorrectionMap filter(FieldName=='Claimant-Chimes') ~> FilterCCMClaimantChimes\nClaimCorrectionMap filter(FieldName=='Benefit State') ~> FilterCCMBenefitState\nDerivedCCMClaimType derive(NewClaimNoMappedClaimType = coalesce(cacheCCMClaimType#lookup(ClaimNumber).FieldValue3,'')) ~> DerivedClaimTypeChimesNewClaimNo\nDerivedClaimTypeChimesNewClaimNo, FilterCCMDOH join(ClaimNumber == FieldValue2,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinNewClaimNoDOH\nJoinNewClaimNoDOH derive(NewClaimNoMappedDOH = iif(!isNull(FieldValue2), FieldValue5, '')) ~> DerivedNewClaimNoDOH\nDerivedNewClaimNoDOH select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode = SelectAfterPolicyPeriod@CarrierCode,\n\t\tClientCode,\n\t\tValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tRowID,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\t{HOL 2 -Prime Contractor (Current)},\n\t\t{File Insured Name},\n\t\t{File Policy Number},\n\t\t{Accident Time},\n\t\t{Litigation Status},\n\t\t{Claimant Occupation},\n\t\t{Catastrophe Code},\n\t\tNewClaimNoMappedClaimType,\n\t\tNewClaimNoMappedDOH,\n\t\tClaimID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterNewClaimNoDOH\nSelectAfterNewClaimNoDOH, FilterCCMClaimantChimes join(ClaimNumber == FieldValue4,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinNewClaimNoClaimant\nJoinNewClaimNoClaimant derive(NewClaimNoMappedClaimant = iif(!isNull(FieldValue4),FieldValue5,'')) ~> DerivedNewClaimNoClaimant\nDerivedNewClaimNoClaimant select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode = SelectAfterNewClaimNoDOH@CarrierCode,\n\t\tClientCode,\n\t\tValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tRowID,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\t{HOL 2 -Prime Contractor (Current)},\n\t\t{File Insured Name},\n\t\t{File Policy Number},\n\t\t{Accident Time},\n\t\t{Litigation Status},\n\t\t{Claimant Occupation},\n\t\t{Catastrophe Code},\n\t\tNewClaimNoMappedClaimType,\n\t\tNewClaimNoMappedDOH,\n\t\tNewClaimNoMappedClaimant,\n\t\tClaimID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterNewClaimantMap\nSelectAfterNewClaimantMap, FilterCCMBenefitState join(ClaimNumber == FieldValue1,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinCCDmBenefitState\nJoinCCDmBenefitState derive(Benefit_State = iif(!isNull(FieldValue1),FieldValue2,Benefit_State),\n\t\tClaimTypeCode = iif(NewClaimNoMappedClaimType!='', NewClaimNoMappedClaimType, ClaimTypeCode),\n\t\t{Date of Hire} = iif(NewClaimNoMappedDOH!='', NewClaimNoMappedDOH, {Date of Hire}),\n\t\tClaimant = iif(NewClaimNoMappedClaimant!='', NewClaimNoMappedClaimant, Claimant)) ~> DerivedColsBasedOnChimes\nDerivedColsBasedOnChimes select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode = SelectAfterNewClaimantMap@CarrierCode,\n\t\tClientCode,\n\t\tValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tRowID,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\t{HOL 2 -Prime Contractor (Current)},\n\t\t{File Insured Name},\n\t\t{File Policy Number},\n\t\t{Accident Time},\n\t\t{Litigation Status},\n\t\t{Claimant Occupation},\n\t\t{Catastrophe Code},\n\t\tClaimID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterBenefitState\nClaimCorrectionMap filter(FieldName=='Claim Number') ~> FilterCCMClaimNumber\nSelectAfterBenefitState, FilterCCMClaimNumber join(ClientCode == FieldValue1\n\t&& ClaimNumber == FieldValue2,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinCCMClaimNo\nJoinCCMClaimNo derive(ClaimNumber = iif(!isNull(FieldValue1) && !isNull(FieldValue2) && !isNull(FieldValue3),FieldValue3,ClaimNumber)) ~> CorrectingClaimNo\nClaimCorrectionMap filter(FieldName=='Date of Hire') ~> FilterCCMDOHNonChimes\nClaimCorrectionMap filter(FieldName=='Claimant Name') ~> FilterCCMClaimant\nSelectAfterCalimNoCorrection, FilterCCMDOHNonChimes join(ClientCode == FieldValue1\n\t&& ClaimNumber == FieldValue2,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinCCMDOH\nJoinCCMDOH derive({Date of Hire} = iif(!isNull(FieldValue1) && !isNull(FieldValue2) && !isNull(FieldValue3),FieldValue3, {Date of Hire})) ~> DerivedDOHNonChimes\nCorrectingClaimNo select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode = SelectAfterBenefitState@CarrierCode,\n\t\tClientCode,\n\t\tValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tRowID,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\t{HOL 2 -Prime Contractor (Current)},\n\t\t{File Insured Name},\n\t\t{File Policy Number},\n\t\t{Accident Time},\n\t\t{Litigation Status},\n\t\t{Claimant Occupation},\n\t\t{Catastrophe Code},\n\t\tClaimID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterCalimNoCorrection\nDerivedDOHNonChimes select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode = SelectAfterCalimNoCorrection@CarrierCode,\n\t\tClientCode,\n\t\tValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tRowID,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\t{HOL 2 -Prime Contractor (Current)},\n\t\t{File Insured Name},\n\t\t{File Policy Number},\n\t\t{Accident Time},\n\t\t{Litigation Status},\n\t\t{Claimant Occupation},\n\t\t{Catastrophe Code},\n\t\tClaimID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterDOHNonChimes\nSelectAfterDOHNonChimes, FilterCCMClaimant join(ClaimNumber == FieldValue1,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinClaimantNonChimes\nJoinClaimantNonChimes derive(Claimant = iif(!isNull(FieldValue1),FieldValue2,Claimant)) ~> DerivedClaimantFinal\nDerivedClaimantFinal select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode = SelectAfterDOHNonChimes@CarrierCode,\n\t\tClientCode,\n\t\tValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tRowID,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\tClaimID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterClaimantFinal\nSelectAfterClaimantFinal, DimClientCarrierGroup join(SelectAfterClaimantFinal@ClientCode == DimClientCarrierGroup@ClientCode\n\t&& SelectAfterClaimantFinal@LOBCode == DimClientCarrierGroup@LOBCode\n\t&& {Policy Effective Date} == PolicyEffectiveDate,\n\tjoinType:'left',\n\tbroadcast: 'right')~> JoinClientCarrierGroup\nSelectAfterClientCarrierGroupJoin derive(ClientKey = coalesce(cacheClient#lookup(ClientCode).ClientKey,-99),\n\t\t{Lag Time} = iif(!isNull({Date Reported}),toString({Date Reported}-{Date of Loss}),'Unknown'),\n\t\tClientCarrierGroupKey = coalesce(ClientCarrierGroupKey,-99),\n\t\tDaysToClose = iif(!isNull({Date Reported}) && !isNull({Closed Date}), {Closed Date}-{Date Reported},-99),\n\t\tTenure = iif(!(isNull({Date of Loss}) || isNull({Date of Hire}))&&(LOBCode=='AU'||LOBCode=='WC'),({Date of Loss}-toDate({Date of Hire})),-99),\n\t\tPolicyPeriod = concat(toString(year({Policy Effective Date})),'-',toString(year({Policy Effective Date})+1)),\n\t\tDayOfWeek = iif(dayOfWeek({Date of Loss})== 2d, 'Monday',\r\niif(dayOfWeek({Date of Loss})== 3d, 'Tuesday',\r\niif(dayOfWeek({Date of Loss})== 4d, 'Wednesday',\r\niif(dayOfWeek({Date of Loss})== 5d, 'Thursday',\r\niif(dayOfWeek({Date of Loss})== 6d, 'Friday',\r\niif(dayOfWeek({Date of Loss})== 7d, 'Saturday',\r\niif(dayOfWeek({Date of Loss})== 1d, 'Sunday',\r\n'')\r\n)))))),\n\t\tLastLoadTime = currentTimestamp(),\n\t\tDateOfHire = toDate({Date of Hire}),\n\t\tClaimant = coalesce(Claimant,'Unknown'),\n\t\tClosedDate = iif(ClaimStatus=='Closed' && isNull({Closed Date}), lastDayOfMonth({Date Reported}), {Closed Date}),\n\t\tReportedDate = {Date Reported},\n\t\tPolicyYear = year({Policy Effective Date}),\n\t\tClaimHashKey = md5(ClaimNumber,Claimant,ClientCarrierGroupKey,ClaimID)) ~> DerivedColumns\nDerivedColumns select(mapColumn(\n\t\tPolicyYear,\n\t\tPolicyExpirationDate = {Policy Expiration Date},\n\t\tPolicyNumber = {Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\tDateofLoss = {Date of Loss},\n\t\tLagTime = {Lag Time},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tDriver,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\tClientKey,\n\t\tTenure,\n\t\tPolicyPeriod,\n\t\tDayOfWeek,\n\t\tLastLoadTime,\n\t\tDateOfHire,\n\t\tClosedDate,\n\t\tReportedDate,\n\t\tPolicyEffectiveDate = {Policy Effective Date},\n\t\tLineOfBusinessKey,\n\t\tClaimHashKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFinalCols\nJoinClientCarrierGroup select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode,\n\t\tClientCode = SelectAfterClaimantFinal@ClientCode,\n\t\tValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode = SelectAfterClaimantFinal@LOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tRowID,\n\t\tAge,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\tClientKey,\n\t\tLineOfBusinessKey,\n\t\tClientCarrierGroupKey = DimClientCarrierGroup@ClientCarrierGroupKey,\n\t\tClaimID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterClientCarrierGroupJoin\nAggregateRows alterRow(updateIf(!isNull(ClaimKey))) ~> AlterRowClim\nSelectFinalCols filter(ClientKey!=-99 && !isNull(ClaimNumber) && year(PolicyEffectiveDate)>=2007) ~> FilterInvalidRecords\nSelectAfterCheckingClaim aggregate(groupBy(ClaimHashKey),\n\teach(match(!in(['ClaimHashKey'],name)), $$ = first($$))) ~> AggregateRows\nDerivedColumns select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode,\n\t\tClientCode,\n\t\tValuationDate,\n\t\t{Policy Year} = PolicyYear,\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week} = DayOfWeek,\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tClaimHashKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectStageColumns\nAggregateStageRows alterRow(updateIf(true())) ~> AlterStageRow\nSelectFinalStageCols aggregate(groupBy(ClaimTransactionKey),\n\teach(match(!in(['ClaimTransactionKey'],name)), $$ = first($$))) ~> AggregateStageRows\nFilterInvalidRecords, ClaimExist join(SelectFinalCols@ClaimNumber == ClaimExist@ClaimNumber\n\t&& SelectFinalCols@Claimant == ClaimExist@Claimant\n\t&& SelectFinalCols@ClientCarrierGroupKey == ClaimExist@ClientCarrierGroupKey,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinExistingClaim\nJoinExistingClaim select(mapColumn(\n\t\tPolicyYear,\n\t\tPolicyExpirationDate,\n\t\tPolicyNumber,\n\t\tAccident_Description,\n\t\tClaimant = SelectFinalCols@Claimant,\n\t\tClaimNumber = SelectFinalCols@ClaimNumber,\n\t\tDateofLoss,\n\t\tLagTime,\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tDriver,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tAge,\n\t\tClientCarrierGroupKey = SelectFinalCols@ClientCarrierGroupKey,\n\t\tCarrierKey,\n\t\tDerivedClaimant,\n\t\tClientKey,\n\t\tTenure,\n\t\tPolicyPeriod,\n\t\tDayOfWeek,\n\t\tLastLoadTime,\n\t\tDateOfHire,\n\t\tClosedDate,\n\t\tReportedDate,\n\t\tPolicyEffectiveDate,\n\t\tLineOfBusinessKey,\n\t\tClaimKey,\n\t\tClaimHashKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAfterCheckingClaim\nFieldValueMapCombined filter(FieldName=='Claim Type') ~> FilterFVClaimType\nFilterFVClaimType derive(ClaimTypeMapKey = iif(!isNull(FieldValue1) && !isNull(FieldValue2) && !isNull(FieldValue3),concat(trim(FieldValue1),'-',trim(FieldValue2),'-',trim(FieldValue3)),\r\niif(!isNull(FieldValue1) && !isNull(FieldValue2) && isNull(FieldValue3),concat(trim(FieldValue1),'-',trim(FieldValue2)),\r\niif(!isNull(FieldValue1) && isNull(FieldValue2) && !isNull(FieldValue3),concat(trim(FieldValue1),'-',trim(FieldValue3)),\r\ntrim(FieldValue1))))) ~> DerivedFVMClaimTypeKey\nChimesPolicyPeriodCorrection derive(ClaimTypeMapKey = iif(!isNull(FileLOB) && !isNull(ClaimTypeCode) && !isNull(FileClaimType),concat(trim(FileLOB),'-',trim(ClaimTypeCode),'-',trim(FileClaimType)),\r\niif(!isNull(FileLOB) && !isNull(ClaimTypeCode) && isNull(FileClaimType),concat(trim(FileLOB),'-',trim(ClaimTypeCode)),\r\niif(!isNull(FileLOB) && isNull(ClaimTypeCode) && !isNull(FileClaimType),concat(trim(FileLOB),'-',trim(FileClaimType)),\r\ntrim(FileLOB))))) ~> SetClaimTypeMapKey\nDerivedOccupationFromClientCode select(mapColumn(\n\t\tClaimTransactionKey,\n\t\tCarrierCode,\n\t\tClientCode,\n\t\tValuationDate,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tLitigation,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tClaimHashKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectFinalStageCols\nSelectStageColumns derive(BodyPart = coalesce(cacheCCMBodyPart1#lookup(concatWS('_', ClientCode, ClaimNumber)).FieldValue3,BodyPart),\n\t\tInjuryType = coalesce(cacheCCMInjuryType#lookup(ClientCode, ClaimNumber).FieldValue3,InjuryType),\n\t\tCauseType = coalesce(cacheCCMCauseType#lookup(ClientCode, ClaimNumber).FieldValue3,CauseType),\n\t\tGender = coalesce(cacheCCMGender#lookup(ClientCode, ClaimNumber).FieldValue3,Gender),\n\t\tMaritalStatus = coalesce(cacheCCMMaritalStatus#lookup(ClientCode, ClaimNumber).FieldValue3,MaritalStatus),\n\t\tOccupation = coalesce(cacheCCMClaimOccupation#lookup(ClientCode, ClaimNumber).FieldValue3,Occupation)) ~> DerivedCCMColumns\nDerivedCCMColumns derive(Occupation = coalesce(cacheCCMOccupation#lookup(ClientCode, Occupation).FieldValue3,Occupation)) ~> DerivedOccupationFromClientCode\nCCM filter(FieldName=='Body Part') ~> FilterCCMBodyPart\nFilterCCMBodyPart derive(CCMBodyPartMapKey = concatWS('_', trim(FieldValue1), trim(FieldValue2))) ~> SetBodyPartMapKey\nCCM filter(FieldName=='Policy Period Default') ~> FilterPolicyPeriodDefault\nCCM filter(FieldName=='Policy Period') ~> FilterClientPolicyPeriod\nFilterClientPolicyPeriod derive(CCMClientLOBMapKey = concatWS(\"_\", trim(FieldValue1), trim(FieldValue2))) ~> SetClientLOBMapKey\nSelectAfterDerivedClaimCols derive(ClientLOBMapKey = concatWS(\"_\", ClientCode, LOBCode)) ~> DerivedClientLOBPPMapKey\nCCM filter(FieldName=='Client Claim Type') ~> CCmClientClaimType\nCCM filter(FieldName=='Claim Type') ~> CCMClaimNoClaimType\nCCM filter(FieldName=='Injury Type') ~> CCMInjuryType\nCCM filter(FieldName=='Cause Type') ~> CCMCauseType\nCCM filter(FieldName=='Gender') ~> CCMGender\nCCM filter(FieldName=='Marital Status') ~> CCMMaritalStatus\nCCM filter(FieldName=='Claim Occupation') ~> CCMClaimOccupation\nCCM filter(FieldName=='Occupation') ~> CCMOccupation\nAlterRowClim sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tClaimKey as long,\n\t\tClaimNumber as string,\n\t\tPolicyNumber as string,\n\t\tPolicyEffectiveDate as date,\n\t\tPolicyExpirationDate as date,\n\t\tClaimant as string,\n\t\tAccident_Description as string,\n\t\tDateofLoss as date,\n\t\tReportedDate as date,\n\t\tClosedDate as date,\n\t\tDateOfHire as date,\n\t\tDriver as string,\n\t\tPolicyYear as integer,\n\t\tPolicyPeriod as string,\n\t\tAge as integer,\n\t\tClientCarrierGroupKey as integer,\n\t\tTimeOfLoss as string,\n\t\tLagTime as string,\n\t\tDaysToClose as integer,\n\t\tTenure as integer,\n\t\tOccurrence_State as string,\n\t\tBenefit_State as string,\n\t\tClientKey as integer,\n\t\tLastLoadTime as timestamp,\n\t\tDayOfWeek as string,\n\t\tLineOfBusinessKey as integer,\n\t\tCarrierKey as integer,\n\t\tClaimHashKey as string,\n\t\tFillerClaim as boolean\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['ClaimHashKey'],\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tClaimHashKey,\n\t\tPolicyNumber,\n\t\tPolicyEffectiveDate,\n\t\tPolicyExpirationDate,\n\t\tClaimant,\n\t\tAccident_Description,\n\t\tDateofLoss,\n\t\tReportedDate,\n\t\tClosedDate,\n\t\tDateOfHire,\n\t\tDriver,\n\t\tPolicyYear,\n\t\tPolicyPeriod,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tLagTime,\n\t\tDaysToClose,\n\t\tTenure,\n\t\tOccurrence_State = Occurrance_State,\n\t\tBenefit_State,\n\t\tClientKey,\n\t\tLastLoadTime,\n\t\tDayOfWeek,\n\t\tLineOfBusinessKey,\n\t\tCarrierKey,\n\t\tClaimNumber\n\t),\n\tpartitionBy('hash', 4,\n\t\tClaimHashKey\n\t)) ~> Claim\nAlterStageRow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tClaimTransactionKey as long,\n\t\tCarrierCode as string,\n\t\tClientCode as string,\n\t\tValuationDate as date,\n\t\t{Policy Year} as integer,\n\t\t{Policy Effective Date} as date,\n\t\t{Policy Expiration Date} as date,\n\t\t{Policy Number} as string,\n\t\tAccident_Description as string,\n\t\tClaimant as string,\n\t\tClaimNumber as string,\n\t\t{Date of Loss} as date,\n\t\t{Lag Time} as string,\n\t\t{Date Reported} as date,\n\t\t{Day of Week} as string,\n\t\t{Closed Date} as date,\n\t\tDaysToClose as integer,\n\t\tClaimStatus as string,\n\t\tGender as string,\n\t\tMaritalStatus as string,\n\t\t{Date of Hire} as string,\n\t\tDriver as string,\n\t\tOccupation as string,\n\t\tLOBCode as string,\n\t\tClaimTypeCode as string,\n\t\tInjuryType as string,\n\t\tBodyPart as string,\n\t\tCauseType as string,\n\t\tNAICS_Code as string,\n\t\tLitigation as string,\n\t\tLocation_Name as string,\n\t\tDepartment_Name as string,\n\t\tDivision_Name as string,\n\t\tTotal_Paid as decimal(18,2),\n\t\tTotal_Reserve as decimal(18,2),\n\t\tRecovery_Total as decimal(18,2),\n\t\tTotal_Incurred as decimal(18,2),\n\t\tNet_Incurred as decimal(18,2),\n\t\tExpense_Paid as decimal(18,2),\n\t\tExpense_Reserve as decimal(18,2),\n\t\tExpense_Recovery as decimal(18,2),\n\t\tExpense_Incurred as decimal(18,2),\n\t\tMedical_BI_Paid as decimal(18,2),\n\t\tMedical_BI_Reserves as decimal(18,2),\n\t\tIndemnity_PD_Paid as decimal(18,2),\n\t\tIndemnity_PD_Reserves as decimal(18,2),\n\t\tIncurred_BI_Med as decimal(18,2),\n\t\tIncurred_PD_LT as decimal(18,2),\n\t\tRecovery_BI_Med as decimal(18,2),\n\t\tRecovery_PD_LT as decimal(18,2),\n\t\tOccurrance_State as string,\n\t\tBenefit_State as string,\n\t\tInsured_Identifier as string,\n\t\tRowID as long,\n\t\tAge as string,\n\t\tClientCarrierGroupKey as integer,\n\t\tClaimHashKey as string\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['ClaimTransactionKey'],\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tClientCode,\n\t\tClaimTransactionKey,\n\t\t{Policy Year},\n\t\t{Policy Effective Date},\n\t\t{Policy Expiration Date},\n\t\t{Policy Number},\n\t\tAccident_Description,\n\t\tClaimant,\n\t\tClaimNumber,\n\t\t{Date of Loss},\n\t\t{Lag Time},\n\t\t{Date Reported},\n\t\t{Day of Week},\n\t\t{Closed Date},\n\t\tDaysToClose,\n\t\tClaimStatus,\n\t\tGender,\n\t\tMaritalStatus,\n\t\t{Date of Hire},\n\t\tDriver,\n\t\tOccupation,\n\t\tLOBCode,\n\t\tClaimTypeCode,\n\t\tInjuryType,\n\t\tBodyPart,\n\t\tCauseType,\n\t\tNAICS_Code,\n\t\tOccurrance_State,\n\t\tBenefit_State,\n\t\tInsured_Identifier,\n\t\tAge,\n\t\tClientCarrierGroupKey,\n\t\tClaimHashKey\n\t),\n\tpartitionBy('hash', 4,\n\t\tClaimTransactionKey\n\t)) ~> stageClaimTransaction\nDerivedFVMClaimTypeKey sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['ClaimTypeMapKey'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tFieldName,\n\t\tFieldValue4,\n\t\tClaimTypeMapKey\n\t)) ~> cacheFVMClaimType\nDimClient sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['ClientCode'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tClientKey,\n\t\tClientCode\n\t)) ~> cacheClient\nSetBodyPartMapKey sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['CCMBodyPartMapKey'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tFieldName,\n\t\tFieldValue3,\n\t\tCCMBodyPartMapKey\n\t)) ~> cacheCCMBodyPart1\nFilterPolicyPeriodDefault sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['PPClientCode'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tPPClientCode = FieldValue1,\n\t\tPPDefaultMonth = FieldValue2,\n\t\tPPDefaultDay = FieldValue3\n\t)) ~> cacheCCMPolicyPeriodDefault\nSetClientLOBMapKey sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['CCMClientLOBMapKey'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tPPMonth = FieldValue3,\n\t\tPPDay = FieldValue4,\n\t\tCCMClientLOBMapKey\n\t)) ~> cacheCCMClientPolicyPeriod\nCCmClientClaimType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['FieldValue1','FieldValue2'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tFieldValue1,\n\t\tFieldValue2,\n\t\tFieldValue3\n\t)) ~> cacheCCMClientClaimType\nCCMClaimNoClaimType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['FieldValue2'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tFieldValue2,\n\t\tFieldValue3\n\t)) ~> cacheCCMClaimType\nCCMInjuryType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['FieldValue1','FieldValue2'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tFieldValue1,\n\t\tFieldValue2,\n\t\tFieldValue3\n\t)) ~> cacheCCMInjuryType\nCCMCauseType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['FieldValue1','FieldValue2'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tFieldValue1,\n\t\tFieldValue2,\n\t\tFieldValue3\n\t)) ~> cacheCCMCauseType\nCCMGender sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['FieldValue1','FieldValue2'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tFieldValue1,\n\t\tFieldValue2,\n\t\tFieldValue3\n\t)) ~> cacheCCMGender\nCCMMaritalStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['FieldValue1','FieldValue2'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tFieldValue1,\n\t\tFieldValue2,\n\t\tFieldValue3\n\t)) ~> cacheCCMMaritalStatus\nCCMClaimOccupation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['FieldValue1','FieldValue2'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tFieldValue1,\n\t\tFieldValue2,\n\t\tFieldValue3\n\t)) ~> cacheCCMClaimOccupation\nCCMOccupation sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tkeys:['FieldValue1','FieldValue2'],\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tFieldValue1,\n\t\tFieldValue2,\n\t\tFieldValue3\n\t)) ~> cacheCCMOccupation"
		}
	}
}