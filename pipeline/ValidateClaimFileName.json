{
	"name": "ValidateClaimFileName",
	"properties": {
		"activities": [
			{
				"name": "Set FileNameWithout Extension",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileNameWithoutExt",
					"value": {
						"value": "@substring(pipeline().parameters.FileName,0,add(sub(lastindexof(pipeline().parameters.FileName,'.'),1),1))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set File Name Substrings",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set FileNameWithout Extension",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileNameArray",
					"value": {
						"value": "@split(variables('FileNameWithoutExt'),'_')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set ClientName",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set File Name Substrings",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileClientName",
					"value": {
						"value": "@if(greaterOrEquals(length(variables('FileNameArray')),1),variables('FileNameArray')[0],'')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set CarrierName",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set ClientName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileCarrierName",
					"value": {
						"value": "@if(greaterOrEquals(length(variables('FileNameArray')),2),variables('FileNameArray')[1],'')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set ValuationDate",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set CarrierName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileValuationDate",
					"value": {
						"value": "@if(greaterOrEquals(length(variables('FileNameArray')),3),formatdatetime(variables('FileNameArray')[2],'yyyy-MM-dd'),'')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Is FutureDate",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set ValuationDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "IsFutureDate",
					"value": {
						"value": "@if(greaterOrEquals(length(variables('FileNameArray')),3),greater(ticks(variables('FileValuationDate')),ticks(utcnow())),false)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set IsValidCarrier",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Is FutureDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "IsValidCarrier",
					"value": {
						"value": "@equals(variables('FileCarrierName'),pipeline().parameters.CarrierName)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If ValidCalimFile",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set IsValidClient",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(and(variables('IsValidCarrier'), not(variables('IsFutureDate'))),variables('IsValidClient'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "MoveInvalidFile",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "MoveFile",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"SourceContainer": "carrier-source",
									"SinkContainer": "skipped-files",
									"FilePath": {
										"value": "@pipeline().parameters.CarrierName",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Create Copy Activity Log",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "MoveInvalidFile",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderQuery": {
										"value": "SELECT '@{pipeline().DataFactory}' as DataFactory_Name,\n'@{pipeline().Pipeline}' as Pipeline_Name,\n'@{pipeline().RunId}' as RunId,\n'@{pipeline().TriggerName}' as TriggerName,\n'@{pipeline().TriggerTime}' as TriggerTime,\n'@{pipeline().parameters.FileName}' as FileName,\n'File Name Validation Failed' as ValidationType",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "dsgrahamDW",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "dsLogs",
									"type": "DatasetReference",
									"parameters": {
										"CarrierCode": {
											"value": "@pipeline().parameters.CarrierName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Set IsValidClient",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup IsValidClient",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "IsValidClient",
					"value": {
						"value": "@bool(activity('Lookup IsValidClient').output.firstRow.Valid)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookup IsValidClient",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set IsValidCarrier",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderStoredProcedureName": "[dbo].[IsValidClient]",
						"storedProcedureParameters": {
							"clientcode": {
								"type": "String",
								"value": {
									"value": "@variables('FileClientName')",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dsgrahamDW",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"CarrierName": {
				"type": "string"
			},
			"FileName": {
				"type": "string"
			}
		},
		"variables": {
			"FileNameWithoutExt": {
				"type": "String"
			},
			"FileNameArray": {
				"type": "Array"
			},
			"FileClientName": {
				"type": "String"
			},
			"FileCarrierName": {
				"type": "String"
			},
			"FileValuationDate": {
				"type": "String"
			},
			"IsFutureDate": {
				"type": "Boolean"
			},
			"IsValidCarrierClient": {
				"type": "Boolean"
			},
			"IsValidCarrier": {
				"type": "Boolean"
			},
			"IsValidClient": {
				"type": "Boolean"
			}
		},
		"folder": {
			"name": "POC/IngestExtract"
		},
		"annotations": [],
		"lastPublishTime": "2021-06-10T17:15:56Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}