{
	"name": "ValidateAndExtractClientClaimFile",
	"properties": {
		"activities": [
			{
				"name": "Set FileNameWithout Extension",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileNameWithoutExt",
					"value": {
						"value": "@substring(pipeline().parameters.FileName,0,add(sub(lastindexof(pipeline().parameters.FileName,'.'),1),1))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set File Name Substrings",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set FileNameWithout Extension",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileNameArray",
					"value": {
						"value": "@split(variables('FileNameWithoutExt'),'_')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set ClientName",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set File Name Substrings",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileClientName",
					"value": {
						"value": "@variables('FileNameArray')[0]",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set ValuationDate",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set ClientName",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileValuationDate",
					"value": {
						"value": "@if(greater(length(variables('FileNameArray')),2),formatdatetime(variables('FileNameArray')[2],'yyyy-MM-dd'),adddays(utcnow(),2))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Is FutureDate",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set ValuationDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "IsFutureDate",
					"value": {
						"value": "@greater(ticks(variables('FileValuationDate')),ticks(utcnow()))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Valid Claim File",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Is FutureDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(not(variables('IsFutureDate')),equals(pipeline().parameters.ClientCode,variables('FileClientName')))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "MoveInvalidFile",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "MoveFile",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"SourceContainer": "client-source",
									"SinkContainer": "skipped-files",
									"FilePath": {
										"value": "@pipeline().parameters.ClientCode",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy to staging",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ExcelSource",
									"additionalColumns": [
										{
											"name": "ProcessedOn",
											"value": {
												"value": "@utcnow()",
												"type": "Expression"
											}
										},
										{
											"name": "ValuationDate",
											"value": {
												"value": "@variables('FileValuationDate')",
												"type": "Expression"
											}
										},
										{
											"name": "ClientCode",
											"value": {
												"value": "@pipeline().parameters.ClientCode",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@pipeline().parameters.ClientCode",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@pipeline().parameters.FileName",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": "TRUNCATE TABLE stage.[KEYSHUM-01]",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "dsExcelFiles",
									"type": "DatasetReference",
									"parameters": {
										"ContainerName": "client-source",
										"CarrierCode": {
											"value": "@pipeline().parameters.ClientCode",
											"type": "Expression"
										},
										"DataStartRange": "A1",
										"SheetIndex": 0,
										"FirstRowHeader": "True"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "dsgrahamStageDBTables",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": "stage",
										"TableName": {
											"value": "@pipeline().parameters.ClientCode",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"ClientCode": {
				"type": "string"
			},
			"FileName": {
				"type": "string"
			}
		},
		"variables": {
			"FileNameWithoutExt": {
				"type": "String"
			},
			"FileNameArray": {
				"type": "Array"
			},
			"FileClientName": {
				"type": "String"
			},
			"FileValuationDate": {
				"type": "String"
			},
			"IsFutureDate": {
				"type": "Boolean"
			}
		},
		"folder": {
			"name": "ClientData"
		},
		"annotations": [],
		"lastPublishTime": "2021-05-17T19:41:29Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}